name: Common CI
on:
  workflow_call:
    inputs:
      component_name:
        required: true
        type: string
      project_name:
        required: true
        type: string
      app_type:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:     { required: true }
      AWS_SECRET_ACCESS_KEY: { required: true }
jobs:
  Download-Dependencies:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Download Dependencies
        run: |
          if [ ${{inputs.app_type}} == nodejs ]; then
            npm install
          elif [ ${{inputs.app_type}} == maven ]; then
            mvn package
          fi

      - name: Get package version with jq
        id: package-version-jq
        run: echo "version=$(jq -r '.version' package.json)" >> "$GITHUB_OUTPUT"
      - name: Use the version
        run: echo "The package version is ${{ steps.package-version-jq.outputs.version }}"
      - name: Check files
        run: ls -l

  Docker-Build:
    runs-on: self-hosted
    needs: Download-Dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Docker Build
        run: |
          docker build -t 160885265516.dkr.ecr.us-east-1.amazonaws.com/${{inputs.project_name}}/${{inputs.component_name}}:${GITHUB_SHA} .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Docker Push
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 160885265516.dkr.ecr.us-east-1.amazonaws.com
          docker push 160885265516.dkr.ecr.us-east-1.amazonaws.com/${{inputs.project_name}}/${{inputs.component_name}}:${GITHUB_SHA}
  Deploy:
    runs-on: self-hosted
    needs: Docker-Build
    steps:
      - name: Checkout Deploy
        uses: actions/checkout@v4
        with:
          repository: DAWS-82S/backend-deploy

      - name: Check files
        run: ls -l
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deployment
        run: |
          aws eks update-kubeconfig --region us-east-1 --name roboshop-dev
          kubectl get nodes
          cd helm
          helm upgrade --install backend -f values-dev.yaml .